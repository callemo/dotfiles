#!/bin/sh
# usage: afmt [-d]
# Automatic code reformatting. It depends on formatters being
# installed.
#
# Flags:
#  -d Show differences.
#

for x
do
	case $x in
	-d) dflag=$x
	esac
done

in=/tmp/afmtin.$$
out=/tmp/afmtout.$$
err=/tmp/afmterr.$$
trap 'rm -f "$in" "$out" "$err"; exit 1' 1 2 15

if [ $# -gt 0 ]
then
	type="$1"
else
	type="${samfile##*.}"
fi

9p read "acme/$winid/body" >"$in"

case $type in
go)
	goimports <"$in" >"$out" 2>"$err" || {
		sed 's@<standard input>@'"$samfile"'@' "$err" >&2
		echo 'afmt: goimports error' >&2
		exit 1
	};;
pl|pm|t)
	perltidy -st -se <"$in" >"$out" 2>"$err" || {
		sed 's@<stdin>@'"$samfile"'@' "$err" >&2
		echo 'afmt: perltidy error' >&2
		exit 1
	};;
py)
	black --stdin-filename "$samfile" -q - <"$in" >"$out" || {
		echo 'afmt: black error' >&2
		exit 1
	};;
rs)
	rustfmt <"$in" >"$out" 2>"$err" || {
		sed 's@<stdin>@'"$samfile"'@' "$err" >&2
		echo 'afmt: rustfmt error' >&2
		exit 1
	};;
*)
	prettier --stdin-filepath "$samfile" <"$in" >"$out" || {
		echo 'afmt: prettier error' >&2
		exit 1
	};;
esac

if [ -n "$dflag" ]
then
	diff -u "$in" "$out" && { rm -f "$in" "$out" "$err"; exit; }
else
	cmp -s "$in" "$out" && { rm -f "$in" "$out" "$err"; exit; }
fi

echo nomark | 9p write "acme/$winid/ctl"

# We need to keep addr open to get the cursor position.
cur="$(perl -e '
    open $pipe, "|-", "9p rdwr acme/$ARGV[0]/addr >/dev/null" || die $!;
    system("echo addr=dot | 9p write acme/$ARGV[0]/ctl && 9p read acme/$ARGV[0]/addr");
    close $pipe || die $!;' -- "$winid" | awk '{ printf "#%d,#%d", $1, $2 }')"

printf , | 9p write "acme/$winid/addr"
9p write "acme/$winid/data" <"$out"

echo mark | 9p write "acme/$winid/ctl"

printf "%s" "$cur" | 9p write "acme/$winid/addr"
printf 'dot=addr\nshow\n' | 9p write "acme/$winid/ctl"

rm -f "$in" "$out" "$err"
